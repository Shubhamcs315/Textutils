{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","console","log","a","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","arr","split","i","length","k","charAt","slice","defaultProps","App","setmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.53a53eab.chunk.js","sourcesContent":["import React from \"react\"; //rfc\r\nimport PropTypes from \"prop-types\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n};\r\nNavbar.defaultProps={\r\n    title:'set title',\r\n    about:'set about'\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    console.log(\"you clicked on up click\");\r\n    const a=text.toUpperCase();\r\n    setText(a);\r\n  }\r\n  const handleOnChange= (event)=>{\r\n    // console.log(\"onChange is handled\");\r\n    setText(event.target.value);\r\n  }\r\n  const handleLoClick = ()=>{\r\n    const a=text.toLowerCase();\r\n    setText(a);\r\n  }\r\n  const copy = ()=>{\r\n    var text=document.getElementById(\"exampleFormControlTextarea1\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n  const capatalizeFirst= ()=>{\r\n    let arr= text.split(\" \");\r\n    console.log(arr);\r\n    let a=\"\";\r\n    for(let i=0;i<arr.length;i++){\r\n      let k= arr[i].charAt(0).toUpperCase()+arr[i].slice(1,arr[i].length);\r\n      console.log(k);\r\n      a= a+\" \"+k;\r\n      console.log(a);\r\n    }\r\n    setText(a);\r\n  }\r\n  const clear =()=>{\r\n    setText('');\r\n  }\r\n  const [text,setText]= useState(\"\");\r\n  // setText(\"HI,i am a shubham\");\r\n  return (\r\n    <> \r\n    <div className=\"container\">\r\n    <div>\r\n      <h1  style={{color:props.mode === \"dark\" ? \"white\" : \"black\"}}>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{backgroundColor:props.mode === \"dark\" ? \"grey\" : \"white\"}}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\"  onClick={handleUpClick}>Convert To UpperCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={copy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={capatalizeFirst}>Capitalize First Char</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={clear}>Clear</button>\r\n    </div>\r\n    </div>\r\n    <div className=\"container my-3\"  style={{color:props.mode === \"dark\" ? \"white\" : \"black\"}}>\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(' ').length} Words and {text.length} Charachter</p>\r\n      <p>{0.008*text.split('').length} Minutes To Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react'\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const toggleMode= ()=>{\n    if(mode==='light'){\n      setmode('dark')\n      document.body.style.backgroundColor='grey'\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor='white'\n    }\n  }\n  return (\n    <>\n<Navbar title=\"Text_utils\" about=\"ABOUT_US\" mode={mode} toggleMode={toggleMode}/>\n<div className=\"container my-3\">\n<TextForm heading=\"Enter Text To Analyze\"  mode={mode}/>\n{/* <About/> */}\n</div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}